{"version":3,"sources":["app/shared/component/router-outlet.tsx","app/app-routing.components.tsx","app/components/page/page.component.tsx","app/components/page/page1.component.tsx","app/components/page/page2.component.tsx","app/shared/component/error-fallback.tsx","app/app.components.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["RouterOutlet","memo","forwardRef","props","routes","map","route","i","AppRoutingComponent","Routes","path","component","ref","className","console","log","render","ErrorFallback","error","resetErrorBoundary","role","message","onClick","AppComponent","to","FallbackComponent","withRouter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","hashType","document","getElementById"],"mappings":"yNAWaA,EAAeC,eAC1BC,sBAAuB,SAACC,GACtB,OACE,cAAC,IAAD,UACE,mCACGA,EAAMC,OAAOC,KAAI,SAACC,EAAOC,GAAR,OAChB,cAACC,EAAD,CAAuCF,MAAOA,GAA9C,cAAiCC,EAAjC,iBCVCE,EAAoB,CAC/B,CACEC,KAAM,QACNC,UCCyBV,eAC3BC,sBAAuB,SAACC,EAAOS,GAC7B,OACE,mCACE,cAACZ,EAAD,CAAcI,OAAQD,EAAMC,eDJhCA,OAAQ,CACN,CACEM,KAAM,UACNC,UERsBV,eAC5BC,sBAAuB,WACrB,OACE,qBAAKW,UAAW,YAAhB,SACE,mDFMF,CACEH,KAAM,UACNC,UGZsBV,eAC5BC,sBAAuB,WACrB,OACE,qBAAKW,UAAW,YAAhB,SACE,sDHcKL,EAAsBP,gBAAK,YAAoC,IAAjCK,EAAgC,EAAhCA,MAKzC,OAJAQ,QAAQC,IACN,2DACAT,EAAMI,MAGN,cAAC,IAAD,CACEA,KAAMJ,EAAMI,KACZM,OAAQ,SAACb,GACP,OAEE,aADA,CACCG,EAAMK,UAAP,2BAAqBR,GAArB,IAA4BC,OAAQE,EAAMF,gB,QI1BvCa,EAAgBhB,eAC3BC,sBAAuB,YAAoC,IAAjCgB,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAG/B,OAFAL,QAAQC,IAAI,6DAGV,sBAAKK,KAAK,QAAV,UACE,sDACA,8BAAMF,EAAMG,UACZ,wBAAQC,QAASH,EAAjB,8BCNKI,EAAetB,eAC1BC,sBAAuB,WACrB,OACE,qCACE,qBAAKW,UAAU,WAAf,SACE,+BACE,6BACE,cAAC,IAAD,CAAMW,GAAG,UAAT,sBAEF,6BACE,cAAC,IAAD,CAAMA,GAAG,UAAT,2BAIN,qBAAKX,UAAU,YAAf,SACE,cAAC,gBAAD,CAAeY,kBAAmBR,EAAlC,SACE,cAACjB,EAAD,CAAcI,OAAQK,e,YCTnBiB,mBAZf,WACE,OACE,qBAAKb,UAAU,MAAf,SACE,cAACU,EAAD,SCKSI,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASpB,OACP,cAAC,IAAD,CAAQqB,SAAU,WAAlB,SACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.0c442e5d.chunk.js","sourcesContent":["import React, { forwardRef, memo } from \"react\";\nimport { Routing } from \"@interfaces/interfaces\";\nimport { AppRoutingComponent } from \"@app/app-routing.components\";\nimport { Switch } from \"react-router-dom\";\n\ninterface Props {\n  routes: Routing[];\n}\n\nexport interface Ref {}\n\nexport const RouterOutlet = memo(\n  forwardRef<Ref, Props>((props) => {\n    return (\n      <Switch>\n        <>\n          {props.routes.map((route, i) => (\n            <AppRoutingComponent key={`app-${i}}`} route={route} />\n          ))}\n        </>\n      </Switch>\n    );\n  })\n);\n","import React, { memo } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { Routing } from \"@interfaces/interfaces\";\nimport { PageComponent } from \"@components/page/page.component\";\nimport { Page1Component } from \"@components/page/page1.component\";\nimport { Page2Component } from \"@components/page/page2.component\";\n\nexport const Routes: Routing[] = [\n  {\n    path: \"/page\",\n    component: PageComponent,\n    routes: [\n      {\n        path: \"/page/1\",\n        component: Page1Component,\n      },\n      {\n        path: \"/page/2\",\n        component: Page2Component,\n      },\n    ],\n  },\n];\n\nexport const AppRoutingComponent = memo(({ route }: { route: Routing }) => {\n  console.log(\n    \"AppRoutingComponent-------------------------------------\",\n    route.path\n  );\n  return (\n    <Route\n      path={route.path}\n      render={(props) => {\n        return (\n          // pass the sub-routes down to keep nesting\n          <route.component {...props} routes={route.routes} />\n        );\n      }}\n    />\n  );\n});\n","import React, { forwardRef, memo } from \"react\";\nimport { Routing } from \"@interfaces/interfaces\";\nimport { Routes } from \"@app/app-routing.components\";\nimport { RouterOutlet } from \"@app/shared/component/router-outlet\";\n\ninterface Props {\n  routes: Routing[];\n}\n\nexport interface Ref {}\n\nexport const PageComponent = memo(\n  forwardRef<Ref, Props>((props, ref) => {\n    return (\n      <>\n        <RouterOutlet routes={props.routes} />\n      </>\n    );\n  })\n);\n","import React, { forwardRef, memo } from \"react\";\n\ninterface Props {}\n\nexport interface Ref {}\n\nexport const Page1Component = memo(\n  forwardRef<Ref, Props>(() => {\n    return (\n      <div className={\"page-wrap\"}>\n        <strong>Page 1</strong>\n      </div>\n    );\n  })\n);\n","import React, { forwardRef, memo } from \"react\";\n\ninterface Props {}\n\nexport interface Ref {}\n\nexport const Page2Component = memo(\n  forwardRef<Ref, Props>(() => {\n    return (\n      <div className={\"page-wrap\"}>\n        <strong>Page 2</strong>\n      </div>\n    );\n  })\n);\n","import React, { forwardRef, memo } from \"react\";\n\ninterface Props {\n  error: Error;\n  resetErrorBoundary: (...args: Array<unknown>) => void;\n}\n\nexport interface Ref {}\n\nexport const ErrorFallback = memo(\n  forwardRef<Ref, Props>(({ error, resetErrorBoundary }) => {\n    console.log(\"PortalGuideComponent-------------------------------------\");\n\n    return (\n      <div role=\"alert\">\n        <p>Something went wrong:</p>\n        <pre>{error.message}</pre>\n        <button onClick={resetErrorBoundary}>Try again</button>\n      </div>\n    );\n  })\n);\n","import React, { forwardRef, memo } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Routes } from \"@app/app-routing.components\";\nimport { RouterOutlet } from \"@app/shared/component/router-outlet\";\nimport { ErrorBoundary } from \"react-error-boundary\";\nimport { ErrorFallback } from \"@app/shared/component/error-fallback\";\n\ninterface Props {}\n\nexport interface Ref {}\n\nexport const AppComponent = memo(\n  forwardRef<Ref, Props>(() => {\n    return (\n      <>\n        <div className=\"left-col\">\n          <ul>\n            <li>\n              <Link to=\"/page/1\">Page 1</Link>\n            </li>\n            <li>\n              <Link to=\"/page/2\">Page 2</Link>\n            </li>\n          </ul>\n        </div>\n        <div className=\"right-col\">\n          <ErrorBoundary FallbackComponent={ErrorFallback}>\n            <RouterOutlet routes={Routes} />\n          </ErrorBoundary>\n        </div>\n      </>\n    );\n  })\n);\n","import React from \"react\";\nimport { AppComponent } from \"@app/app.components\";\nimport { withRouter } from \"react-router-dom\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport \"@assets/style/App.scss\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <AppComponent />\n    </div>\n  );\n}\n\n/*\n * this will be required to useHistory\n * for Routing\n * */\nexport default withRouter(App);\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"@assets/style/index.scss\";\nimport { HashRouter as Router } from \"react-router-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <Router hashType={\"hashbang\"}>\n    <App />\n  </Router>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}